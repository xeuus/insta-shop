import './Styles.sass';import React, {createRef, PureComponent} from 'react';import {Autowired, Observer, RoutingService} from "coreact";import {RoutesService} from "Services/RoutesService";import {StatusBar} from "Common/StatusBar";import {AddService} from "./AddService";import throttle from "lodash/throttle";@Observer([AddService])export class Post extends PureComponent {  text = createRef<HTMLTextAreaElement>();  add = Autowired(AddService, this);  routing = Autowired(RoutingService, this);  routes = Autowired(RoutesService, this);  state = {    title: '',  };  onChange = (e: any) => this.setState({title: e.target.value});  resize = throttle(() => {    const text = this.text.current;    text.style.height = 'auto';    text.style.height = text.scrollHeight + 'px';  }, 500);  componentDidMount(): void {    const text = this.text.current;    text.addEventListener('focus', this.resize);    text.addEventListener('blur', this.resize);    text.addEventListener('change', this.resize);    text.addEventListener('cut', this.resize);    text.addEventListener('paste', this.resize);    text.addEventListener('drop', this.resize);    text.addEventListener('keydown', this.resize);    text.focus();    text.select();    this.resize();  }  componentWillUnmount(): void {    const text = this.text.current;    text.removeEventListener('focus', this.resize);    text.removeEventListener('blur', this.resize);    text.removeEventListener('change', this.resize);    text.removeEventListener('cut', this.resize);    text.removeEventListener('paste', this.resize);    text.removeEventListener('drop', this.resize);    text.removeEventListener('keydown', this.resize);  }  render() {    const {title} = this.state;    return <>      <section className="add--post">        <header>          <StatusBar title="New Post" actionName="Post" onAction={() => {            this.add.post(this.state.title);            this.routing.rewind()          }} onBack={() => this.routing.rewind()}/>        </header>        <div className="container-fluid my-3">          <div className="post-container">            <img src={this.add.image ? this.add.image.src : ''}/>            <textarea              ref={this.text}              placeholder="Write something..."              maxLength={400}              value={title}              onChange={this.onChange}/>            <div className="stats">              {title.length}/400            </div>          </div>        </div>        <hr/>      </section>    </>  }}